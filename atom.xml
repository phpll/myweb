<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://newdy.cf</id>
    <title>Gridea</title>
    <updated>2020-03-01T05:23:52.616Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://newdy.cf"/>
    <link rel="self" href="https://newdy.cf/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://newdy.cf/images/avatar.png</logo>
    <icon>https://newdy.cf/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[让你的黑群晖更加完美，用M.2 NVME SSD做缓存]]></title>
        <id>https://newdy.cf/post/rang-ni-de-hei-qun-hui-geng-jia-wan-mei-yong-m2-nvme-ssd-zuo-huan-cun/</id>
        <link href="https://newdy.cf/post/rang-ni-de-hei-qun-hui-geng-jia-wan-mei-yong-m2-nvme-ssd-zuo-huan-cun/">
        </link>
        <updated>2020-03-01T05:18:42.000Z</updated>
        <content type="html"><![CDATA[<p>黑群晖一直以来有一个不完美的点就是无法使用缓存功能，目前使用国外大神做的这个补丁已经可以完美解决这个问题</p>
<p>一、下载安装脚本<br>
https://github.com/padavan01/lede/blob/master/libNVMEpatch.zip</p>
<p>二、不管你用FTP也好， DSM文件管理器也好， 把这个libNVMEpatch.sh 拷进你的黑群晖里， 比如， copy 进共享文件夹 DATA</p>
<p>三、SSH登录后使用脚本<br>
sudo -i<br>
找到你的共享文件夹比如DATA， 我的在/volume1/DATA</p>
<p>cd /usr/local/etc/rc.d/<br>
cp /volume1/DATA/libNVMEpatch.sh .<br>
chmod 755 libNVMEpatch.sh<br>
退出SSH</p>
<p>注意这里libNVMEpatch.sh在rc.d目录下， 已经成了一个自启动执行文件， 但其实这主要是防止一些小版本升级不小心改到了Nvme驱动二进制文件， 把patch覆盖了。 如果你能忍住不升级， 只执行一次也是可以的</p>
<p>接下来就是重启黑群， 再次开机后，登陆DSM，打开“存储空间管理员”， 可以看到HDD/SSD栏下面， 赫然已经认出了两块Nvme缓存设备！！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[snmp对接爱快跨三层应用功能 --- J35/J50 ]]></title>
        <id>https://newdy.cf/post/snmp-dui-jie-ai-kuai-kua-san-ceng-ying-yong-gong-neng-j35j50/</id>
        <link href="https://newdy.cf/post/snmp-dui-jie-ai-kuai-kua-san-ceng-ying-yong-gong-neng-j35j50/">
        </link>
        <updated>2020-02-27T10:33:39.000Z</updated>
        <content type="html"><![CDATA[<p>一、介绍<br>
在跨三层设备的环境下，路由获取三层设备下的MAC地址一般为三层设备wan口的MAC地址，针对这种情况，爱快推出了跨三层应用功能，主要解决获取三层下的MAC地址及web认证问题<br>
本文介绍下爱快与J50交换机之间连接后，具体需要怎么设置</p>
<p>二、网络拓扑<br>
<img src="https://newdy.cf/post-images/1582799650812.png" alt="" loading="lazy"><br>
三、具体配置<br>
1：爱快路由配置步骤：<br>
①：网络设置--静态路由，添加一条回指路由，指向J50内网设备</p>
<figure data-type="image" tabindex="1"><img src="https://newdy.cf/post-images/1582799734596.png" alt="" loading="lazy"></figure>
<p>②：应用工具--跨三层应用，开启服务</p>
<figure data-type="image" tabindex="2"><img src="https://newdy.cf/post-images/1582799739233.png" alt="" loading="lazy"></figure>
<p>注：由于三层设备还未开启SNMP服务，所以这里会显示状态为异常，三层配置成功后会自动检测成功</p>
<p>功能服务：勾选开启<br>
功能状态：自动检测工作状态，检测间隔时间为5-10S<br>
检测异常时，说明配置路由或三层设备的配置不一致<br>
检测正常时，说明功能可以正常使用<br>
SNMP服务器IP：J50的上联口iP地址，这里填写192.168.15.248<br>
SNMP服务监听端口：默认为161，如无特殊需求可不修改<br>
SNMP协议版本：需和J50配置一致，这里选择V2<br>
团体名：需要和J50配置的团体名一致，如无特殊需求可不修改<br>
2：IK-J50配置步骤：<br>
①：配置vlan100、vlan200，指定接口10为access上联口，vid为100，指定接口20为access下联口，vid为200<br>
<img src="https://newdy.cf/post-images/1582799758999.png" alt="" loading="lazy"></p>
<figure data-type="image" tabindex="3"><img src="https://newdy.cf/post-images/1582799776939.png" alt="" loading="lazy"></figure>
<p>②：配置vlan100的IP为192.168.15.248，vlan200的IP为192.168.200.1<br>
<img src="https://newdy.cf/post-images/1582799836027.png" alt="" loading="lazy"><br>
<img src="https://newdy.cf/post-images/1582799843132.png" alt="" loading="lazy"><br>
③：开启DHCP服务端，配置地址池、租约和DNS<br>
<img src="https://newdy.cf/post-images/1582799903233.png" alt="" loading="lazy"><br>
<img src="https://newdy.cf/post-images/1582799909374.png" alt="" loading="lazy"><br>
④：配置静态路由</p>
<figure data-type="image" tabindex="4"><img src="https://newdy.cf/post-images/1582799956221.png" alt="" loading="lazy"></figure>
<p>⑤：开启SNMP服务，同时配置SNMP版本<br>
<img src="https://newdy.cf/post-images/1582799963324.png" alt="" loading="lazy"><br>
⑥：配置SNMP团体名及访问规则：<br>
<img src="https://newdy.cf/post-images/1582799996351.png" alt="" loading="lazy"><br>
四、最终效果展示<br>
跨三层应用界面：</p>
<figure data-type="image" tabindex="5"><img src="https://newdy.cf/post-images/1582800053303.png" alt="" loading="lazy"></figure>
<p>三层下电脑详情：<br>
<img src="https://newdy.cf/post-images/1582800057552.png" alt="" loading="lazy"><br>
爱快终端监控显示：<br>
<img src="https://newdy.cf/post-images/1582800083530.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SNMP（V1/V2/V3）配置举例及配置]]></title>
        <id>https://newdy.cf/post/snmpv1v2v3pei-zhi-ju-li-ji-pei-zhi/</id>
        <link href="https://newdy.cf/post/snmpv1v2v3pei-zhi-ju-li-ji-pei-zhi/">
        </link>
        <updated>2020-02-27T03:14:20.000Z</updated>
        <content type="html"><![CDATA[<p>SNMPv1和SNMPv2c配置举例：<br>
SNMPv1和SNMPv2c的工作原理基本一致，要求配置的命令也是一致的，下面是SNMPv1和SNMPv2配置举例。<br>
1、配置Switch的接口IP地址，使其和网管站之间路由可达<br>
<HUAWEI> system-view<br>
[HUAWEI] sysname Switch<br>
[Switch] vlan 100<br>
[Switch-vlan100] quit<br>
[Switch] interface gigabitethernet 0/0/1<br>
[Switch-GigabitEthernet0/0/1] port link-type hybrid<br>
[Switch-GigabitEthernet0/0/1] port hybrid pvid vlan 100<br>
[Switch-GigabitEthernet0/0/1] port hybrid untagged vlan 100<br>
[Switch-GigabitEthernet0/0/1] quit<br>
[Switch] interface vlanif 100<br>
[Switch-Vlanif100] ip address 10.1.2.1 24<br>
[Switch-Vlanif100] quit<br>
2、 配置Switch的SNMP版本<br>
[Switch] snmp-agent sys-info version v1    //snmp-agent sys-info version v2c表示配置为snmpv2c的版本<br>
3、 配置团体名<br>
[Switch] snmp-agent community write adminnms2<br>
4、 配置告警主机<br>
[Switch] snmp-agent target-host trap address udp-domain 10.1.1.2 params securityname adminnms2        //params securityname表示在网管侧显示的用户安全名<br>
对于SNMPv1和SNMPv2c版本，不需要通过securityname参数的校验，网管可以接收所有告警主机发送的告警信息。该参数主要用来区分在同一个IP地址创建了多个告警主机场景下的多个告警主机</p>
<p>上面的配置为SNMPv1/SNMPv2c必须配置的选项，针对其他的配置，都是按照需求来进行，比如限制网管对设备的管理权限。</p>
<h1 id="配置acl使nms2可以管理交换机nms1不允许管理交换机">配置ACL，使NMS2可以管理交换机，NMS1不允许管理交换机。</h1>
<p>[Switch] acl 2001<br>
[Switch-acl-basic-2001] rule 5 permit source 10.1.1.2 0.0.0.0<br>
[Switch-acl-basic-2001] rule 6 deny source 10.1.1.1 0.0.0.0<br>
[Switch-acl-basic-2001] quit</p>
<h1 id="配置mib视图限制nms2可以管理交换机上除rmon之外的节点">配置MIB视图，限制NMS2可以管理交换机上除RMON之外的节点。</h1>
<p>[Switch] snmp-agent mib-view excluded allextrmon 1.3.6.1.2.1.16</p>
<h1 id="配置团体名并引用acl和mib视图">配置团体名并引用ACL和MIB视图。</h1>
<p>[Switch] snmp-agent community write adminnms2 mib-view allextrmon acl 2001   //配置访问权限，使NMS2可以管理交换机上RMON之外的节点</p>
<p>SNMPV3配置举例：<br>
SNMPv3的实现原理和SNMPv1/SNMPv2c基本一致，唯一的区别是SNMPv3增加了身份验证和加密处理，下面是SNMPv3配置举例：<br>
1、配置Switch的接口IP地址，使其和网管站之间路由可达<br>
<HUAWEI> system-view<br>
[HUAWEI] sysname Switch<br>
[Switch] vlan 100<br>
[Switch-vlan100] quit<br>
[Switch] interface gigabitethernet 0/0/1<br>
[Switch-GigabitEthernet0/0/1] port link-type hybrid<br>
[Switch-GigabitEthernet0/0/1] port hybrid pvid vlan 100<br>
[Switch-GigabitEthernet0/0/1] port hybrid untagged vlan 100<br>
[Switch-GigabitEthernet0/0/1] quit<br>
[Switch] interface vlanif 100<br>
[Switch-Vlanif100] ip address 10.1.2.1 24<br>
[Switch-Vlanif100] quit<br>
2、配置Switch的SNMP版本<br>
[Switch] snmp-agent sys-info version v3    //可不配置，默认为V3版本<br>
3、配置团体名<br>
[Switch] snmp-agent community write adminnms2<br>
4、配置用户组<br>
[Switch] snmp-agent group v3 admin privacy   //配置用户组的安全方式为privacy，表示既认证又加密，admin表示用户组的名称<br>
5、配置用户相关信息</p>
<h1 id="配置用户并关联用户组">配置用户并关联用户组。</h1>
<p>[Switch] snmp-agent usm-user v3 nms2-admin group admin   // nms2-admin表示用户名，admin表示用户组名称，与前一条命令中配置保持一致</p>
<h1 id="对用户的数据进行认证认证密码为authe1234-因为用户的安全级别必须-用户组的安全级别上面用户组方式为既认证又加密所以下面用户必须同时配置认证和加密">对用户的数据进行认证，认证密码为Authe@1234。（因为用户的安全级别必须 &gt;= 用户组的安全级别，上面用户组方式为既认证又加密，所以下面用户必须同时配置认证和加密）</h1>
<p>[Switch] snmp-agent usm-user v3 nms2-admin authentication-mode sha<br>
Please configure the authentication password (8-64)<br>
Enter Password:                  //输入认证密码，本例的认证密码为：Authe@1234。<br>
Confirm Password:                //输入认证密码，本例的认证密码为：Authe@1234。</p>
<h1 id="对用户的数据进行加密加密密码为priva1234">对用户的数据进行加密，加密密码为Priva@1234。</h1>
<p>[Switch] snmp-agent usm-user v3 nms2-admin privacy-mode aes128<br>
Please configure the privacy password (8-64)<br>
Enter Password:                  //输入加密密码，本例的加密密码为：Priva@1234。<br>
Confirm Password:                //输入加密密码，本例的加密密码为：Priva@1234。<br>
5、配置告警主机<br>
[Switch] snmp-agent target-host trap address udp-domain 10.1.1.2 params securityname nms2-admin v3 privacy</p>
<p>说明1：对于SNMPv3版本，securityname必须配置为用户名。告警主机和网管都需要配置此参数，如果网管要接收告警主机发送的告警，必须通过该参数（包括认证和加密的方式）的校验，否则告警无法接收。<br>
说明2：由于上面用户和用户组的基本都是privacy（既认证又加密），所以这里告警主机的安全级别必须为privacy。</p>
<p>SNMPV3用户，用户组及告警主机安全级别配置说明<br>
设备具备三种属性，按照安全性从高到低为：<br>
·     1级：privacy （认证且加密）<br>
·     2级：authentication （只认证）<br>
·     3级：noauthentication （不认证不加密）</p>
<p>要求用户的安全级别必须 &gt;=告警主机的安全级别&gt;= 用户组的安全级别<br>
·     如果用户组的安全级别是privacy，那么告警主机和用户的安全级别一定得是privacy。<br>
·     如果用户组的安全级别是authentication，那么告警主机的安全级别是authentication，用户的安全级别可以是authentication和privacy。<br>
·     如果用户组的安全级别是authentication，告警主机的安全级别是privacy，那么用户的安全级别是privacy。<br>
·     如果用户组的安全级别是noauthentication，告警主机的安全级别是noauthentication，那么用户的安全级别可以是noauthentication、authentication、privacy。<br>
·     如果用户组的安全级别是noauthentication，告警主机的安全级别是authentication，那么用户的安全级别可以是authentication和privacy。<br>
·     如果用户组的安全级别是noauthentication，告警主机的安全级别是privacy，那么用户的安全级别是privacy。</p>
<p>上面的配置为SNMPV3必须配置的选项，针对其他的配置，都是按照需求来进行，比如限制网管对设备的管理权限。</p>
<h1 id="配置acl使nms2可以管理交换机nms1不允许管理交换机-2">配置ACL，使NMS2可以管理交换机，NMS1不允许管理交换机。</h1>
<p>[Switch] acl 2001<br>
[Switch-acl-basic-2001] rule 5 permit source 10.1.1.2 0.0.0.0<br>
[Switch-acl-basic-2001] rule 6 deny source 10.1.1.1 0.0.0.0<br>
[Switch-acl-basic-2001] quit</p>
<h1 id="配置mib视图限制nms2可以管理交换机上除rmon之外的节点-2">配置MIB视图，限制NMS2可以管理交换机上除RMON之外的节点。</h1>
<p>[Switch] snmp-agent mib-view included isoview iso</p>
<h1 id="配置用户组并引用acl和mib视图">配置用户组并引用ACL和MIB视图。</h1>
<p>[Switch] snmp-agent group v3 admin privacy write-view isoview acl 2001  //配置访问权限，使NMS2可以管理ISO节点</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一条网线有八根线，空闲的四根能做什么？]]></title>
        <id>https://newdy.cf/post/yi-tiao-wang-xian-you-ba-gen-xian-kong-xian-de-si-gen-neng-zuo-shi-me/</id>
        <link href="https://newdy.cf/post/yi-tiao-wang-xian-you-ba-gen-xian-kong-xian-de-si-gen-neng-zuo-shi-me/">
        </link>
        <updated>2020-02-26T16:56:00.000Z</updated>
        <content type="html"><![CDATA[<p>一条网线里面有八根线，多数情况下实际有用的只有四根（橙白、橙、绿白、绿），另外四根（蓝白、蓝、棕白、棕）就空着不用。这给了我们很多省事的机会，用上这四根线，就不用重新拉线了。来看看这四根线能做什么？</p>
<p><img src="https://newdy.cf/post-images/1582736196547.jpg" alt="" loading="lazy"><br>
网线才用一半，那另一半岂不是可以再拉一路网线。理论上可以，实际上也可以。不过不能拉太远。因为蓝白、蓝、棕白、棕这四根线的电阻比橙白、橙、绿白、绿这四根的要大的多，并且绕线密度也不一样，所以传输距离会小很多。<br>
<img src="https://newdy.cf/post-images/1582736242356.jpg" alt="" loading="lazy"><br>
办公上最常用的就是接电话线了。电话线是用两芯的，也就是说一路电话线要用两根线。这样一条网线除了上网，还能拉两路电话线。PS：注意拉线时不要用测线仪测电话线，电话线电压高，有些测线仪会烧掉的。网卡电压3.3v以下，电话线平时一二十伏，来电时能超过50v。<br>
<img src="https://newdy.cf/post-images/1582736279863.jpg" alt="" loading="lazy"><br>
还一种比较常用的就是接摄像头。模拟摄像头是两芯的，也跟电话线一样可以接两路。高清头是四芯的，只能接一路了。摄像头这样接还要另外供电。<br>
<img src="https://newdy.cf/post-images/1582736304697.jpg" alt="" loading="lazy"><br>
再来说说USB，功能太多了。USB是四芯的，一根接地，一根供电（5v），两根传数据。四根线两头颜色对好接上就行了。可以当作USB延长线，接手机，连打印机等。打印机这样接十米都没问题，比usb线效果还好。</p>
<p><img src="https://newdy.cf/post-images/1582736336102.jpg" alt="" loading="lazy"><br>
一般LED屏显示的内容都是通过插U盘上传的。如果显示实时内容就要用串口（com口）连接电脑。这种串口接线只要接3根就行，网线4根够用了。不过串口线长度不要超过30米。<br>
<img src="https://newdy.cf/post-images/1582736361767.jpg" alt="" loading="lazy"><br>
网线还可以供电，就是我们平常说的PoE（Power over Ethernet）。一路供电用两根线就行了，不过有衰减，有空余的线可以把多根拧成一根，效果会好一点。这种方法仅限于弱电供电。当然也有牛人用它来接220V的交流电，不过小编不敢。</p>
<figure data-type="image" tabindex="1"><img src="https://newdy.cf/post-images/1582736389055.jpg" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[开启ECN功能]]></title>
        <id>https://newdy.cf/post/kai-qi-ecn-gong-neng/</id>
        <link href="https://newdy.cf/post/kai-qi-ecn-gong-neng/">
        </link>
        <updated>2020-02-25T17:32:16.000Z</updated>
        <content type="html"><![CDATA[<p>登录服务器，单击 开始 &gt; 运行，输入 cmd，进入命令行窗口。<br>
执行如下命令，查看TCP全局参数的信息。<br>
netsh interface tcp show global<br>
系统显示类似如下，则说明系统已经开启ECN功能</p>
<figure data-type="image" tabindex="1"><img src="https://newdy.cf/post-images/1582652009787.png" alt="" loading="lazy"></figure>
<p>执行如下命令，关闭ECN功能。<br>
netsh interface tcp set global ecncapability=disabled<br>
执行如下命令，开启ECN功能<br>
netsh interface tcp set global ecncapability=enabled<br>
执行如下命令，查看TCP全局参数的信息，确认 ECN 功能 为 disabled。<br>
netsh interface tcp show global</p>
<p>更多信息<br>
ECN的作用主要是在网络出现拥塞时通知TCP的传输层，减少TCP连接中被丢弃的数据包数量，达到避免重传、减少等待时间、减少网络抖动的效果。但是有些网络设备的配置规则不能与ECN兼容，例如打印机、路由器。这些设备会将ECN交换包视为非法，同时丢弃已设置ECN的数据包，导致网络出现问题。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[公共 DNS 服务器 IP 地址]]></title>
        <id>https://newdy.cf/post/gong-gong-dns-fu-wu-qi-ip-di-zhi/</id>
        <link href="https://newdy.cf/post/gong-gong-dns-fu-wu-qi-ip-di-zhi/">
        </link>
        <updated>2020-02-25T02:56:24.000Z</updated>
        <content type="html"><![CDATA[<p>名称                                           	     DNS 服务器IP 地址<br>
114 DNS	                              114.114.114.114	114.114.115.115<br>
阿里 AliDNS	                          223.5.5.5	             223.6.6.6<br>
百度 BaiduDNS	                  180.76.76.76<br>
DNSPod DNS+	                    119.29.29.29	     182.254.116.116<br>
CNNIC SDNS                        1.2.4.8	                210.2.4.8<br>
oneDNSDNS 派	                117.50.11.11	      52.80.66.66<br>
电信/移动/铁通	                    101.226.4.6	           218.30.118.6<br>
DNS 派 联通	                         123.125.81.6	       140.207.198.6<br>
Cloudflare DNS	                  1.1.1.1	                 1.0.0.1<br>
Google DNS	                       8.8.8.8	                  8.8.4.4<br>
IBM Quad9	                        9.9.9.9<br>
DNS.SB	                               185.222.222.222	  185.184.222.222<br>
OpenDNS	                            208.67.222.222	    208.67.220.220<br>
V2EX DNS	                        199.91.73.222	     178.79.131.110</p>
<p>香港电信                                202.181.202.140    202.181.224.140<br>
香港联通                                205.252.144.228    208.151.69.65<br>
澳门 V                                   202.175.3.8            202.175.3.3<br>
台湾                                      168.95.192.1          168.95.1.1</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[网线水晶头接法和线序（图文详解）]]></title>
        <id>https://newdy.cf/post/wang-xian-shui-jing-tou-jie-fa-he-xian-xu-tu-wen-xiang-jie/</id>
        <link href="https://newdy.cf/post/wang-xian-shui-jing-tou-jie-fa-he-xian-xu-tu-wen-xiang-jie/">
        </link>
        <updated>2020-02-24T14:23:00.000Z</updated>
        <content type="html"><![CDATA[<p>水晶头接线颜色有两种：<br>
1.平行线的做法是：两头同为568A标准或568B标准。（常用）</p>
<p>2.交叉线的做法是：一头568A标准，一头568B标准。</p>
<p>568A标准顺序：绿白，绿，橙白，蓝，蓝白，橙，棕白，棕</p>
<p>568B标准顺序：橙白，橙，绿白，蓝，蓝白，绿，棕白，棕</p>
<p>如果连接的双方地位不对等的，则用平行线，例如电脑连接到路由器或交换机。</p>
<p>如果连接的两台设备是对等的，则用交叉线，例如电脑连接到电脑。<br>
<img src="https://newdy.cf/post-images/1582554223204.jpg" alt="" loading="lazy"></p>
<p>扩展资料</p>
<p>网线质量鉴别<br>
三类线的标识是“CAT3”，带宽10M，适用于十兆网基本已淘汰；五类线的标识是“CAT5”，带宽100M ，适用于百兆以下的网；超五类线的标识是“CAT5E”，带宽155M，是主流产品；六类线的标识是“ CAT6”，带宽250M，用于架设千兆网</p>
<p>除了假线外，市面上有很多用三类线冒充五类线、超五类线的情况。下面是网线的鉴别方法：</p>
<p>三类线里的线是二对四根，五类线里的线是四对八根。</p>
<p>真线的外胶皮不易燃烧，而假线的外胶皮大部分是易燃的。</p>
<p>假线在较高温下（40℃以上）外胶皮会变软，真的不会。</p>
<p>真线内部的铜芯用料较纯，比较软、有韧性而且不易被拉断。</p>
<p>网线的扭绕方向是逆时针扭绕而不是顺时针绕的。顺时针绕会对速度和传输距离有影响。</p>
<p>网线里的线在对绕时圈数是不一样的，因为圈数一样的话两对线之间的传输信号会互相干扰，使传输距离变短。</p>
<p>屏蔽双绞线的导线与胶皮间有一层金属网和绝缘材料，水晶头外面也被金属所包裹。</p>
<p>有条件的话可以找100米的双绞线利用Windows中的“网络监视器”或“资源监视器”实地测试一下，5类线能达到100Mbps，3类线只有10Mbps。</p>
<p>网线标准长度1000英尺/箱（大约相当于305米）</p>
<p>使用磁铁可以鉴别铁芯线，如果网线用磁铁可以吸引（哪怕是轻微的吸引），那说明是铁芯线，铁芯线因为电阻大，严重影响传输效率和传输距离，不推荐购买。优质的网线一般都是使用铜作为线芯的。即使差一些的线，也应该使用铝作为线芯。</p>
<p>剥开少许网线，看一下线芯的粗细，线芯细了也会影响传输效率。所以应该选用相对而言线芯粗的。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MySQL（MariaDB）的 SSL 加密复制]]></title>
        <id>https://newdy.cf/post/mysqlmariadbde-ssl-jia-mi-fu-zhi/</id>
        <link href="https://newdy.cf/post/mysqlmariadbde-ssl-jia-mi-fu-zhi/">
        </link>
        <updated>2020-02-24T12:04:51.000Z</updated>
        <content type="html"><![CDATA[<p>在默认的主从复制过程或远程连接到MySQL/MariaDB所有的链接通信中的数据都是明文的，在局域网内连接倒问题不大；要是在外网里访问数据或则复制，则安全隐患会被放大很多。由于项目要求需要直接和外网的一台实例进行同步。所以本文介绍下通过SSL加密的方式进行复制的方法，来进一步提高数据的安全性。本文会一起介绍MySQL和MariaDB。</p>
<p>环境搭建：</p>
<p>默认情况下ssl都是关闭的，要是have_ssl显示NO，则表示数据库不支持SSL，需要重新编译安装来支持它，显示为DISABLED表示支持SSL，但没有开启。</p>
<p>复制代码</p>
<blockquote>
<p>show variables like '%ssl%';                                                                                                  +---------------+----------+<br>
| Variable_name | Value    |<br>
+---------------+----------+<br>
| have_openssl  | DISABLED |<br>
| have_ssl      | DISABLED |<br>
| ssl_ca        |          |<br>
| ssl_capath    |          |<br>
| ssl_cert      |          |<br>
| ssl_cipher    |          |<br>
| ssl_key       |          |<br>
+---------------+----------+<br>
复制代码<br>
现在来开启SSL，在配置文件的mysqld选项组里面添加：</p>
</blockquote>
<p>ssl<br>
重启数据库，再次查看：</p>
<p>复制代码<br>
show variables like '%ssl%';<br>
+---------------+-------+<br>
| Variable_name | Value |<br>
+---------------+-------+<br>
| have_openssl  | YES   |<br>
| have_ssl      | YES   |<br>
| ssl_ca        |       |<br>
| ssl_capath    |       |<br>
| ssl_cert      |       |<br>
| ssl_cipher    |       |<br>
| ssl_key       |       |<br>
+---------------+-------+<br>
复制代码<br>
接着就是配置SSL的重点了：</p>
<p>1：在主服务器上创建CA证书：</p>
<p>openssl genrsa 2048 &gt; ca-key.pem</p>
<p>openssl req -new -x509 -nodes -days 1000 -key ca-key.pem &gt; ca-cert.pem<br>
2：在主服务器上创建服务端的证书：</p>
<p>openssl req -newkey rsa:2048 -days 1000 -nodes -keyout server-key.pem &gt; server-req.pem</p>
<p>openssl x509 -req -in server-req.pem -days 1000 -CA ca-cert.pem -CAkey ca-key.pem -set_serial 01 &gt; server-cert.pem<br>
3：在主服务器上创建客户端的证书：</p>
<p>openssl req -newkey rsa:2048 -days 1000 -nodes -keyout client-key.pem &gt; client-req.pem</p>
<p>openssl x509 -req -in client-req.pem -days 1000 -CA ca-cert.pem -CAkey ca-key.pem -set_serial 01 &gt; client-cert.pem<br>
上面的操作都是在主上执行的，并且都在/etc/mysql/ 目录下执行的。这里需要注意的是MySQL和MariaDB不同：</p>
<p>MySQL在生成上面证书的时候需要输入大量用户信息，在CA上创建证书要注意所有的用户信息要和CA中的一致，从国家到部门都要相同，否则会造成证书无法使用，直接全部默认回车即可。要是用户信息一样则MariaDB会报错：</p>
<p>ERROR 2026 (HY000): SSL connection error: error:00000001:lib(0):func(0):reason(1)<br>
和</p>
<p>[ERROR] Slave I/O: error connecting to master ... - retry-time: 60  retries: 86400  message: SSL connection error: error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed, Internal MariaDB error code: 2026<br>
MariaDB在生成上面证书的时候也是需要输入大量用户信息，和MySQL不同的是输入的用户信息服务端和客户端不能一致。即服务端输入和客户端输入不一样。具体原因见这里，最后可以通过：</p>
<p>openssl verify -CAfile /etc/mysql/ca-cert.pem /etc/mysql/server-cert.pem /etc/mysql/client-cert.pem<br>
验证MariaDB证书的有效性。好了，所有的证书已经生成，那么在主上需要修改配置文件，把生成的证书配置起来：</p>
<p>ssl-ca=/etc/mysql/ca-cert.pem<br>
ssl-cert=/etc/mysql/server-cert.pem<br>
ssl-key=/etc/mysql/server-key.pem<br>
并且把生成的证书：ca-cert.pem，client-cert.pem，client-key.pem 复制给从服务器。</p>
<p>重启主服务器，查看SSL的情况：</p>
<p>复制代码</p>
<blockquote>
<p>show variables like '%ssl%';<br>
+---------------+----------------------------+<br>
| Variable_name | Value                      |<br>
+---------------+----------------------------+<br>
| have_openssl  | DISABLED                   |<br>
| have_ssl      | DISABLED                   |<br>
| ssl_ca        | /etc/mysql/ca-cert.pem     |<br>
| ssl_capath    |                            |<br>
| ssl_cert      | /etc/mysql/server-cert.pem |<br>
| ssl_cipher    |                            |<br>
| ssl_key       | /etc/mysql/server-key.pem  |<br>
+---------------+----------------------------+<br>
复制代码<br>
发现have_ssl变成了DISABLED，查看错误日志：</p>
</blockquote>
<p>SSL error: Unable to get private key from '/etc/mysql/server-key.pem'<br>
141229 11:09:02 [Warning] Failed to setup SSL<br>
141229 11:09:02 [Warning] SSL error: Unable to get private key<br>
发现服务端的key不可用，在网上到了解决办法，大家可以自己看：http://askubuntu.com/questions/194074/enabling-ssl-in-mysql，概括的说就是openssl新版本的变化导致的，这里有2个解决办法来重新生成server-key.pem：</p>
<p>方法1：openssl rsa</p>
<p>openssl rsa -in server-key.pem -out server-key.pem<br>
再次查看SSL情况：</p>
<p>复制代码</p>
<blockquote>
<p>show variables like '%ssl%';<br>
+---------------+----------------------------+<br>
| Variable_name | Value                      |<br>
+---------------+----------------------------+<br>
| have_openssl  | YES                        |<br>
| have_ssl      | YES                        |<br>
| ssl_ca        | /etc/mysql/ca-cert.pem     |<br>
| ssl_capath    |                            |<br>
| ssl_cert      | /etc/mysql/server-cert.pem |<br>
| ssl_cipher    |                            |<br>
| ssl_key       | /etc/mysql/server-key.pem  |<br>
+---------------+----------------------------+<br>
复制代码<br>
方法2：这里也可以直接安装openssl的0.9.8x版本进行证书生成。</p>
</blockquote>
<p>wget http://www.openssl.org/source/openssl-0.9.8x.tar.gz<br>
tar xvfz openssl-0.9.8x.tar.gz<br>
cd openssl-0.9.8x<br>
./config --prefix=/usr/local/openssl-0.9.8<br>
make<br>
make install<br>
本文是通过方法1来进行解决的。</p>
<p>到此在主上的操作完成，再生成一个复制帐号：REQUIRE SSL</p>
<p>GRANT REPLICATION SLAVE ON <em>.</em> TO 'rep'@'192.168.200.%' IDENTIFIED BY '123456' REQUIRE SSL;<br>
接着就去从上配置。之前已经把生成的证书给了从服务器，那么在配置之前可以用SSL连接主服务器试试：</p>
<p>$mysql --ssl-ca=ca-cert.pem --ssl-cert=client-cert.pem --ssl-key=client-key.pem -h192.168.200.245 -urep -p<br>
Enter password:<br>
SSL error: Unable to get private key from 'client-key.pem'<br>
ERROR 2026 (HY000): SSL connection error<br>
同理，也是SSL的问题导致的，重新生成client-key.pem，方法同重新生成server-key.pem一样：</p>
<p>openssl rsa -in client-key.pem -out client-key.pem<br>
继续用SSL测试连接：</p>
<p>复制代码<br>
$mysql --ssl-ca=ca-cert.pem --ssl-cert=client-cert.pem --ssl-key=client-key.pem -h192.168.200.245 -urep -p<br>
Enter password:<br>
Welcome to the MySQL monitor.  Commands end with ; or \g.<br>
Your MySQL connection id is 763<br>
Server version: 5.5.35-0ubuntu0.12.04.2-log (Ubuntu)</p>
<p>Copyright (c) 2000, 2014, Oracle and/or its affiliates. All rights reserved.</p>
<p>Oracle is a registered trademark of Oracle Corporation and/or its<br>
affiliates. Other names may be trademarks of their respective<br>
owners.</p>
<p>Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</p>
<h2 id="mysql-s">mysql&gt; \s</h2>
<p>mysql  Ver 14.14 Distrib 5.5.37, for debian-linux-gnu (x86_64) using readline 6.2</p>
<p>Connection id:        763<br>
Current database:<br>
Current user:        rep@192.168.200.212<br>
SSL:            Cipher in use is DHE-RSA-AES256-SHA<br>
Current pager:        stdout<br>
Using outfile:        ''<br>
Using delimiter:    ;<br>
Server version:        5.5.35-0ubuntu0.12.04.2-log (Ubuntu)<br>
Protocol version:    10<br>
Connection:        192.168.200.245 via TCP/IP<br>
Server characterset:    utf8mb4<br>
Db     characterset:    utf8mb4<br>
Client characterset:    utf8<br>
Conn.  characterset:    utf8<br>
TCP port:        3306<br>
Uptime:            22 min 52 sec</p>
<p>Threads: 3  Questions: 2325  Slow queries: 1  Opens: 7483  Flush tables: 1  Open tables: 100  Queries per second avg: 1.694<br>
复制代码<br>
SSL测试连接成功，并且登入的SSL协议是：Cipher in use is DHE-RSA-AES256-SHA</p>
<p>继续在从上配置SSL：</p>
<p>ssl<br>
ssl-ca=/etc/mysql/ca-cert.pem<br>
ssl-cert=/etc/mysql/client-cert.pem<br>
ssl-key=/etc/mysql/client-key.pem<br>
查看SSL是否被支持：</p>
<p>复制代码</p>
<blockquote>
<p>show variables like '%ssl%';<br>
+---------------+----------------------------+<br>
| Variable_name | Value                      |<br>
+---------------+----------------------------+<br>
| have_openssl  | YES                        |<br>
| have_ssl      | YES                        |<br>
| ssl_ca        | /etc/mysql/ca-cert.pem     |<br>
| ssl_capath    |                            |<br>
| ssl_cert      | /etc/mysql/client-cert.pem |<br>
| ssl_cipher    |                            |<br>
| ssl_key       | /etc/mysql/client-key.pem  |<br>
+---------------+----------------------------+<br>
复制代码<br>
从上SSL也被正确支持，那么最后开始配置主从replicate。在从上CHANGE:</p>
</blockquote>
<p>CHANGE MASTER TO MASTER_HOST='192.168.200.245', MASTER_USER='rep', MASTER_PASSWORD='123456', MASTER_LOG_FILE='mysql-bin.000042', MASTER_LOG_POS=521, MASTER_SSL=1, MASTER_SSL_CA = '/etc/mysql/ca-cert.pem', MASTER_SSL_CERT = '/etc/mysql/client-cert.pem', MASTER_SSL_KEY = '/etc/mysql/client-key.pem'<br>
测试：</p>
<p>M：</p>
<p>复制代码</p>
<blockquote>
<p>create table tmp_1229(id int,name varchar(100))default charset utf8;</p>
</blockquote>
<blockquote>
<p>insert into tmp_1229 values(1,'a'),(2,'b'),(3,'c');</p>
</blockquote>
<blockquote>
<p>select * from tmp_1229;<br>
+------+------+<br>
| id   | name |<br>
+------+------+<br>
|    1 | a    |<br>
|    2 | b    |<br>
|    3 | c    |<br>
+------+------+<br>
复制代码<br>
S:</p>
</blockquote>
<p>复制代码</p>
<blockquote>
<p>select * from tmp_1229;<br>
+------+------+<br>
| id   | name |<br>
+------+------+<br>
|    1 | a    |<br>
|    2 | b    |<br>
|    3 | c    |<br>
+------+------+</p>
</blockquote>
<p>复制代码<br>
以上同步成功。</p>
<p>总结：</p>
<pre><code>  SSL(Secure Sockets Layer 安全套接层),及其继任者传输层安全（Transport Layer Security，TLS）是为网络通信提供安全及数据完整性的一种安全协议。复制默认是明文进行传输的，通过SSL加密可以大大提高数据的安全性。在上面的过程中，遇到一些问题：
</code></pre>
<p>1：openssl版本问题引起的证书不可用，文中已经说明解决办法。</p>
<p>2：MariaDB 证书的不可用，原因是生成服务端客户端证书的时候输入一致导致的，文中也说明了解决办法。</p>
<p>3：要是配置有问题，在用SSL登陆的时候，可以发现错误信息，可以直接定位到哪里出问题。</p>
<p>ssl登陆：<br>
mysql --ssl-ca=ca-cert.pem --ssl-cert=client-cert.pem --ssl-key=client-key.pem -h192.168.200.245 -urep -p<br>
4：在配置MariaDB的时候，在生成证书的时候可以直接先验证，查看是否有问题。</p>
<p>验证：<br>
openssl verify -CAfile /etc/mysql/ca-cert.pem /etc/mysql/server-cert.pem /etc/mysql/client-cert.pem<br>
/etc/mysql/server-cert.pem: OK<br>
/etc/mysql/client-cert.pem: OK</p>
<p>5：要是openssl版本没有问题，不需要再次通过openssl rsa 再次生成，具体的安装配置方法参照本文章即可。</p>
<p>更新（2016.3.19）：</p>
<p>今天做了MySQL5.7的SSL复制，5.7安装的时候就已经在数据目录下面生成了上面的这些pem文件，所以直接把client的pem复制到从上去就可以了（注意复制过去之后修改权限，属主改成mysql即可）。否则报错：</p>
<p>Failed to set up SSL because of the following SSL library error: Unable to get certificate ... server-cert.pem<br>
Failed to set up SSL because of the following SSL library error: Unable to get private key ... server-cert.pem</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[四个方法离线下载 Chrome 拓展程序]]></title>
        <id>https://newdy.cf/post/si-ge-fang-fa-chi-xian-xia-zai-chrome-tuo-zhan-cheng-xu/</id>
        <link href="https://newdy.cf/post/si-ge-fang-fa-chi-xian-xia-zai-chrome-tuo-zhan-cheng-xu/">
        </link>
        <updated>2020-02-23T18:50:15.000Z</updated>
        <content type="html"><![CDATA[<p>1、Chrome 网上商店中文镜像网站<br>
https://www.gugeapps.net/<br>
2、离线下载 crx 英文网站，支持历史版本<br>
https://www.crx4chrome.com/<br>
3、根据插件 URL 和 ID ，远程下载插件 Google Chrome 插件<br>
https://chrome-extension-downloader.com/</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[天猫精灵X1自动恢复出厂设置解决方法]]></title>
        <id>https://newdy.cf/post/tian-mao-jing-ling-x1-zi-dong-hui-fu-chu-han-she-zhi-jie-jue-fang-fa/</id>
        <link href="https://newdy.cf/post/tian-mao-jing-ling-x1-zi-dong-hui-fu-chu-han-she-zhi-jie-jue-fang-fa/">
        </link>
        <updated>2020-02-23T15:05:57.000Z</updated>
        <content type="html"><![CDATA[<p>最近天猫精灵使用一段时间后就会自动恢复出厂，需要重新配置网络等，特别麻烦。 偶见一篇文章详解了出现该问题的原因及解决办法，跟着动手试了下，还真心好了。 整理了一下操作步骤，给需要的朋友一个解决办法。</p>
<p>一、修复方法<br>
<img src="https://newdy.cf/post-images/1582470411036.jpg" alt="" loading="lazy"><br>
<img src="https://i.loli.net/2020/02/24/eEZnVhjgK64ia3R.png" alt="1581432909952.png" loading="lazy"></p>
<p>修复方法：SW1右0.5V跳线到GND</p>
<p>简单操作，手残党勿怕，实在搞不定，找个修电器的帮忙操作下也就几块钱。</p>
<p>二、修复步骤详解</p>
<ol>
<li>
<p>拆开底座<br>
小心撕掉底部的橡胶防滑垫，会看见3个螺丝孔，螺丝刀直接顶下去，松动全部螺丝，拿下底座。<br>
<img src="https://newdy.cf/post-images/1582470437258.jpg" alt="" loading="lazy"></p>
</li>
<li>
<p>分离主板与底座<br>
拿下底座后，会看见两个固定主板的卡口，轻顶住，小心拿下主板（注意后面还有排线，分离时不要太用力）。<br>
<img src="https://newdy.cf/post-images/1582470469204.jpg" alt="" loading="lazy"></p>
</li>
<li>
<p>拔掉电源排线<br>
分离主板与底座后，到主板底面，分离主板与电源控制板的排线。排线直接匀力拔出即可。<br>
<img src="https://newdy.cf/post-images/1582470508273.jpg" alt="" loading="lazy"></p>
</li>
<li>
<p>焊接跳线<br>
找一根跳线（家里面找不到细的线了，乱找了一根坏的USB线，剪掉抽一截出来），焊接SW1右侧 与 GND接口，实测可以不拆掉SW1（其实就是恢复出厂设置的那个孔顶下来的按钮）也能正常使用，且保留了恢复出厂的功能。<br>
焊接完毕后，通电测试，上电正常就按拆开顺序倒序重新安装回去。<br>
至此修复完毕，目前半个月左右了未再出现自动恢复出厂的情况。<br>
<img src="https://newdy.cf/post-images/1582470546211.jpg" alt="" loading="lazy"></p>
</li>
</ol>
]]></content>
    </entry>
</feed>